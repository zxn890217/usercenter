<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.usercenter.sys.dao.AuthorityDao">
    <resultMap type="com.example.usercenter.sys.entity.Authority" id="AuthorityMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <collection property="groups" javaType="java.util.ArrayList" ofType="com.example.usercenter.sys.entity.UserGroup">
            <id property="id" column="g_id"/>
            <result property="name" column="g_name"/>
        </collection>
    </resultMap>

    <sql id="select-fields">
    id,name,code
    </sql>

    <select id="get" parameterType="Long" resultMap="AuthorityMap">
        SELECT a.*,g.id g_id,g.name g_name FROM authority a
        LEFT JOIN authority_user_group ug on a.id=ug.authority_id
        LEFT JOIN user_group g on ug.user_group_id=g.id
        WHERE a.id = #{id}
    </select>

    <insert id="insert" parameterType="com.example.usercenter.sys.entity.Authority" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO authority(name,code)
        VALUES(#{name},#{code})
    </insert>

    <insert id="insertAuthorityUserGroup" parameterType="com.example.usercenter.sys.entity.UserGroup">
        INSERT INTO authority_user_group(user_group_id, authority_id) VALUES
        <foreach collection="groups" item="group" separator=",">
            (#{group.id}, #{id})
        </foreach>
    </insert>

    <update id="update" parameterType="com.example.usercenter.sys.entity.Authority">
        UPDATE authority
        <set>
            name = #{name},
            code = #{code},
        </set>
        WHERE id = #{id}
    </update>

    <update id="sensitiveUpdate" parameterType="com.example.usercenter.sys.entity.Authority">
        UPDATE authority
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="code != null">code = #{code},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM authority
        WHERE id = #{id}
    </delete>

    <delete id="deleteRoleAuthority" parameterType="long">
        delete FROM role_authority where authority_id=#{id}
    </delete>

    <delete id="deleteAuthorityUserGroup" parameterType="long">
        DELETE FROM authority_user_group
        WHERE authority_id = #{id}
    </delete>

    <select id="exists" parameterType="com.example.usercenter.sys.entity.Authority" resultType="int">
        select count(*) from authority
        <where>
            <if test="id != null">id = #{id},</if>
            <if test="name != null">name = #{name},</if>
            <if test="code != null">code = #{code},</if>
        </where>
    </select>

    <sql id="select-conditions">
        <if test="id != null">AND a.id = #{id}</if>
        <if test="name != null and name != ''">AND a.name LIKE CONCAT('%',#{name},'%')</if>
        <if test="code != null and code != ''">AND a.code = #{code}</if>
    </sql>

    <select id="count" parameterType="java.util.Map" resultType="int">
        SELECT count(*) FROM authority a
        <where>
            <include refid="select-conditions"/>
        </where>
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="AuthorityMap">
        SELECT a.*,g.id g_id,g.name g_name FROM authority a
        LEFT JOIN authority_user_group ug on a.id=ug.authority_id
        LEFT JOIN user_group g on ug.user_group_id=g.id
        <where>
            <include refid="select-conditions"/>
        </where>
        <if test="sort != null">
            order by a.${sort} ${order}
        </if>
        <if test="limit > 0">
            limit #{offset},#{limit}
        </if>
    </select>
</mapper>