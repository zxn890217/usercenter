<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.usercenter.sys.dao.UserGroupDao">
    <resultMap type="com.example.usercenter.sys.entity.UserGroup" id="UserGroupMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="path" column="path"/>
        <association property="parent" javaType="com.example.usercenter.sys.entity.UserGroup">
            <id property="id" column="p_id"/>
            <result property="name" column="p_name"/>
        </association>
        <collection property="authorities" javaType="java.util.ArrayList" ofType="com.example.usercenter.sys.entity.Authority">
            <id property="id" column="a_id"/>
            <result property="name" column="a_name"/>
            <result property="code" column="a_code"/>
        </collection>
    </resultMap>

    <sql id="select-fields">
    id,name
    </sql>

    <select id="get" parameterType="Long" resultMap="UserGroupMap">
        SELECT g.*,p.id p_id,p.name p_name,a.id a_id,a.name a_name,a.code a_code
        FROM user_group g
        LEFT JOIN user_group p on g.pid = p.id
        LEFT JOIN authority_user_group ag on g.id = ag.user_group_id
        LEFT JOIN authority a on ag.authority_id = a.id
        WHERE g.id = #{id}
    </select>

    <insert id="insert" parameterType="com.example.usercenter.sys.entity.UserGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_group(name,path,pid)
        VALUES(#{name},#{path},
        <choose>
            <when test="parent != null and parent.id != null">#{parent.id}</when>
            <otherwise>0</otherwise>
        </choose>)
    </insert>

    <insert id="insertAuthorityUserGroup" parameterType="com.example.usercenter.sys.entity.UserGroup">
        INSERT INTO authority_user_group(user_group_id, authority_id) VALUES
        <foreach collection="authorities" item="item" separator=",">
            (#{id}, #{item.id})
        </foreach>
    </insert>

    <update id="update" parameterType="com.example.usercenter.sys.entity.UserGroup">
        UPDATE user_group
        <set>
            name = #{name},
            path = #{path},
            <choose>
                <when test="parent != null">pid = #{parent.id}</when>
                <otherwise>pid = 0</otherwise>
            </choose>
        </set>
        WHERE id = #{id}
    </update>

    <update id="sensitiveUpdate" parameterType="com.example.usercenter.sys.entity.UserGroup">
        UPDATE user_group
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="path != null">path = #{path},</if>
            <if test="parent != null">pid = #{parent.id},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateChildrenPathById">
        UPDATE user_group SET path = CONCAT(#{newPath}, SUBSTRING(path, LENGTH(#{oldPath})+1)) WHERE parent_id = #{id}
    </update>

    <update id="updateChildrenPathByPath">
        UPDATE user_group SET path = CONCAT(#{newPath}, SUBSTRING(path, LENGTH(#{oldPath})+1)) where path like CONCAT(#{oldPath},#{id},'/%')
    </update>

    <update id="updateChildrenToRoot" parameterType="com.example.usercenter.sys.entity.UserGroup">
        UPDATE user_group SET pid = 0, path = SUBSTRING(path, LENGTH(CONCAT(#{path},#{id},'/'))) where path like CONCAT(#{path},#{id},'/%')
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM user_group
        WHERE id = #{id}
    </delete>

    <delete id="deleteAuthorityUserGroup" parameterType="long">
        DELETE FROM authority_user_group
        WHERE user_group_id = #{id}
    </delete>

    <select id="exists" parameterType="com.example.usercenter.sys.entity.UserGroup" resultType="int">
        select count(*) from user_group
        <where>
            <if test="id != null">id = #{id},</if>
            <if test="name != null">name = #{name},</if>
        </where>
    </select>

    <sql id="select-conditions">
        <if test="id != null">AND g.id = #{id}</if>
        <if test="name != null">AND g.name like concat('%',#{name},'%')</if>
        <if test="pid != null">AND g.pid = #{pid}</if>
        <if test="path != null">AND g.path like CONCAT('%/',#{path},'/%')</if>
        <if test="unpath != null">AND g.path not like CONCAT('%/',#{unpath},'/%')</if>
    </sql>

    <select id="count" parameterType="java.util.Map" resultType="int">
        SELECT count(*) FROM user_group g
        <where>
            <include refid="select-conditions"/>
        </where>
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="UserGroupMap">
        SELECT g.*,p.id p_id,p.name p_name
        FROM user_group g
        LEFT JOIN user_group p on g.pid = p.id
        <where>
            <include refid="select-conditions"/>
        </where>
        <if test="sort != null">
            order by g.${sort} ${order}
        </if>
        <if test="limit > 0">
            limit #{offset},#{limit}
        </if>
    </select>
</mapper>